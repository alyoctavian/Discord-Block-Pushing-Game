package CreateChannel;

import java.util.EnumSet;
import java.util.List;
import java.util.Locale.Category;

import Main.BotStartup;
import net.dv8tion.jda.api.Permission;
import net.dv8tion.jda.api.entities.Guild;
import net.dv8tion.jda.api.entities.Member;
import net.dv8tion.jda.api.entities.TextChannel;
import net.dv8tion.jda.api.events.message.guild.GuildMessageReceivedEvent;
import net.dv8tion.jda.api.hooks.ListenerAdapter;

public class CreateChannel extends ListenerAdapter{
	
	@Override
	public void onGuildMessageReceived(GuildMessageReceivedEvent event)
	{
		String[] args = event.getMessage().getContentRaw().split(" ");
		
		net.dv8tion.jda.api.entities.Category gamesCategory = event.getGuild().getCategoriesByName("Games", true).get(0);
		
		List<TextChannel> categoryChannels = gamesCategory.getTextChannels();
		
		Boolean channelExists = false;
		
		for (int i = 0; i < categoryChannels.size(); i++)
		{
			if (categoryChannels.get(i).getName() == "Game 1 " + event.getMember().getEffectiveName())
			{
				channelExists = true;
				
				// Used for Debug purposes
				event.getChannel().sendMessage("Channel Exists").queue();
				
				return;
			}
		}
		
		if (args[0].equalsIgnoreCase(BotStartup.prefix + "create") && !channelExists)
		{
			Guild guild = event.getMember().getGuild();
			
			String name = "Game 1 " + event.getMember().getEffectiveName();
	
		    gamesCategory.createTextChannel(name)
		         .addPermissionOverride(event.getMember(), EnumSet.of(Permission.VIEW_CHANNEL), null)
		         .addPermissionOverride(guild.getPublicRole(), null, EnumSet.of(Permission.VIEW_CHANNEL))
		         .queue(); // this actually sends the request to discord.
		    
		    // Used for Debug purposes
		    event.getChannel().sendMessage("Channel Created").queue();
		}
	}
}
